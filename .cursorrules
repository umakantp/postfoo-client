## Tech Stack

- Framework: Next.js (React)
- Language: TypeScript
- UI Components: shadcn/ui (based on Radix UI primitives)
- Styling: Tailwind CSS
- Icons: Lucide React
- Version Control: Git

## Do's

- Use TypeScript for type safety. prefer interfaces over types.
- When generating code, prioritize TypeScript best practices.
- Follow the coding standards defined in the ESLint configuration.
- Minimize the use of AI generated comments, instead use clearly named variables and functions.
- Use functional and declarative programming patterns; avoid classes.
- Prefer native functions over custom or Lodash's
- Use Lodash helpers instead of custom solutions
- Maintain consistency in naming and problem-solving
- Write indistinguishable, simple, and clean code
- Use modern (ES6) solutions, e.g. Object destructuringUse
- Shadcn UI, Radix, and Tailwind for components and styling.
- Implement responsive design with Tailwind CSS.
- Use Zod for form validation

## Don'ts

- Avoid strings for properties in Lodash functions
- Prioritize clean code over performance unless necessary
- Avoid `any` type unless absolutely needed
- Prefer simple solutions over complex ones

## Naming

- Use simple, consistent names. When in doubt, name by type (e.g., `user`, `task`)
- Use lowercase with dashes for directories & files (e.g., portfolio-fund) and files (e.g. portfolio-fund.tsx)
- Enums: Use TitleCase (e.g., `FundCategory`)
- Queries: Noun for one, plural for many (e.g., `fund`, `stocks`)
- Mutations: Verb+Noun (e.g., `updatePortfolio`)

## Misc

- Before providing a block of code, reason about what is requested and the context provided first

## Commit messages

- Start with an Action Verb: Use verbs like "Add", "Refactor", "Fix", "Implement", "Update", "Delete"
- Be specific: Clearly state the main change or feature in no more than 15 words
- Provide context: Briefly mention the purpose or impact if needed, keeping the entire message under 120 characters

# Additional Resources

- [Next.js Documentation](https://nextjs.org/docs)
- [TypeScript Handbook](https://www.typescriptlang.org/docs/)
- [Tailwind CSS Documentation](https://tailwindcss.com/docs)
- [React Documentation](https://reactjs.org/docs/getting-started.html)
- [Git Documentation](https://git-scm.com/docs)
- [Shadcn UI Documentation](https://ui.shadcn.com/docs)
- [Radix UI Documentation](https://www.radix-ui.com/primitives/docs/overview/introduction)
- [Zod Documentation](https://zod.dev/)
- [React Hook Form Documentation](https://react-hook-form.com/docs)
